//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebsiteRegressionProduction.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IClaimImportService")]
    public interface IClaimImportService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimImportService/ImportClaim", ReplyAction="http://tempuri.org/IClaimImportService/ImportClaimResponse")]
        VendorUploadService.ServiceReference1.ClaimResult[] ImportClaim(string username, string password, byte[] claimContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimImportService/ImportClaim", ReplyAction="http://tempuri.org/IClaimImportService/ImportClaimResponse")]
        System.Threading.Tasks.Task<VendorUploadService.ServiceReference1.ClaimResult[]> ImportClaimAsync(string username, string password, byte[] claimContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimImportService/DeleteClaim", ReplyAction="http://tempuri.org/IClaimImportService/DeleteClaimResponse")]
        VendorUploadService.ServiceReference1.ClaimDeletionStatus DeleteClaim(string username, string password, string vendorClaimId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimImportService/DeleteClaim", ReplyAction="http://tempuri.org/IClaimImportService/DeleteClaimResponse")]
        System.Threading.Tasks.Task<VendorUploadService.ServiceReference1.ClaimDeletionStatus> DeleteClaimAsync(string username, string password, string vendorClaimId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimImportService/GetMedicalValidationMessages", ReplyAction="http://tempuri.org/IClaimImportService/GetMedicalValidationMessagesResponse")]
        VendorUploadService.ServiceReference1.ApexValidationResponse GetMedicalValidationMessages(string username, string password, string vendorClaimId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimImportService/GetMedicalValidationMessages", ReplyAction="http://tempuri.org/IClaimImportService/GetMedicalValidationMessagesResponse")]
        System.Threading.Tasks.Task<VendorUploadService.ServiceReference1.ApexValidationResponse> GetMedicalValidationMessagesAsync(string username, string password, string vendorClaimId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimImportService/GetMultipleMedicalValidationMessages", ReplyAction="http://tempuri.org/IClaimImportService/GetMultipleMedicalValidationMessagesRespon" +
            "se")]
        VendorUploadService.ServiceReference1.ApexValidationResponse[] GetMultipleMedicalValidationMessages(string username, string password, string[] vendorClaimId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimImportService/GetMultipleMedicalValidationMessages", ReplyAction="http://tempuri.org/IClaimImportService/GetMultipleMedicalValidationMessagesRespon" +
            "se")]
        System.Threading.Tasks.Task<VendorUploadService.ServiceReference1.ApexValidationResponse[]> GetMultipleMedicalValidationMessagesAsync(string username, string password, string[] vendorClaimId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClaimImportServiceChannel : WebsiteRegressionProduction.ServiceReference1.IClaimImportService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClaimImportServiceClient : System.ServiceModel.ClientBase<WebsiteRegressionProduction.ServiceReference1.IClaimImportService>, WebsiteRegressionProduction.ServiceReference1.IClaimImportService {
        
        public ClaimImportServiceClient() {
        }
        
        public ClaimImportServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClaimImportServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClaimImportServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClaimImportServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public VendorUploadService.ServiceReference1.ClaimResult[] ImportClaim(string username, string password, byte[] claimContent) {
            return base.Channel.ImportClaim(username, password, claimContent);
        }
        
        public System.Threading.Tasks.Task<VendorUploadService.ServiceReference1.ClaimResult[]> ImportClaimAsync(string username, string password, byte[] claimContent) {
            return base.Channel.ImportClaimAsync(username, password, claimContent);
        }
        
        public VendorUploadService.ServiceReference1.ClaimDeletionStatus DeleteClaim(string username, string password, string vendorClaimId) {
            return base.Channel.DeleteClaim(username, password, vendorClaimId);
        }
        
        public System.Threading.Tasks.Task<VendorUploadService.ServiceReference1.ClaimDeletionStatus> DeleteClaimAsync(string username, string password, string vendorClaimId) {
            return base.Channel.DeleteClaimAsync(username, password, vendorClaimId);
        }
        
        public VendorUploadService.ServiceReference1.ApexValidationResponse GetMedicalValidationMessages(string username, string password, string vendorClaimId) {
            return base.Channel.GetMedicalValidationMessages(username, password, vendorClaimId);
        }
        
        public System.Threading.Tasks.Task<VendorUploadService.ServiceReference1.ApexValidationResponse> GetMedicalValidationMessagesAsync(string username, string password, string vendorClaimId) {
            return base.Channel.GetMedicalValidationMessagesAsync(username, password, vendorClaimId);
        }
        
        public VendorUploadService.ServiceReference1.ApexValidationResponse[] GetMultipleMedicalValidationMessages(string username, string password, string[] vendorClaimId) {
            return base.Channel.GetMultipleMedicalValidationMessages(username, password, vendorClaimId);
        }
        
        public System.Threading.Tasks.Task<VendorUploadService.ServiceReference1.ApexValidationResponse[]> GetMultipleMedicalValidationMessagesAsync(string username, string password, string[] vendorClaimId) {
            return base.Channel.GetMultipleMedicalValidationMessagesAsync(username, password, vendorClaimId);
        }
    }
}
